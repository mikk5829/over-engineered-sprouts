{
  "stats": {
    "suites": 12,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-22T09:45:21.736Z",
    "end": "2020-06-22T09:45:21.755Z",
    "duration": 19,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "97b7d1ff-2a45-453c-8bae-7f4b222103b5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "910a4fce-6e5a-4d2f-93f3-4b78d9625b77",
          "title": "database testing",
          "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
          "file": "/test/dbTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1dc07b00-e6bf-467e-bec1-cc2d9ee071b6",
              "title": "Normal user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should exist",
                  "fullTitle": "database testing Normal user should exist",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await db.removeUser(user_name)\nawait db.createUser(user_name,0,0)\nlet user = await db.getUser(user_name)\nexpect(user.name).to.equal(user_name)",
                  "err": {},
                  "uuid": "213dee7d-dbfc-44df-8314-47ee393b1303",
                  "parentUUID": "1dc07b00-e6bf-467e-bec1-cc2d9ee071b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "213dee7d-dbfc-44df-8314-47ee393b1303"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "705ecff7-87c6-4445-987c-a06f3770ee33",
              "title": "Normal user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not be created twice",
                  "fullTitle": "database testing Normal user should not be created twice",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.createUser(user_name,0,0)\nexpect(user).to.equal(\"user exists\")",
                  "err": {},
                  "uuid": "9e3b14c5-9beb-4ff3-90e6-4a9fa86063a4",
                  "parentUUID": "705ecff7-87c6-4445-987c-a06f3770ee33",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9e3b14c5-9beb-4ff3-90e6-4a9fa86063a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "04cd1948-6339-4d12-a718-00b9ac3dd323",
              "title": "Normal user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have 0 wins",
                  "fullTitle": "database testing Normal user should have 0 wins",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.getUser(user_name)\nexpect(user.wins).to.equal(0)",
                  "err": {},
                  "uuid": "959b1607-382c-4f7f-afe0-0510a8277059",
                  "parentUUID": "04cd1948-6339-4d12-a718-00b9ac3dd323",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "959b1607-382c-4f7f-afe0-0510a8277059"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "edf198e4-d0b1-4b07-ab47-747680b6387f",
              "title": "Normal user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have 0 losses",
                  "fullTitle": "database testing Normal user should have 0 losses",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.getUser(user_name)\nexpect(user.losses).to.equal(0)",
                  "err": {},
                  "uuid": "b5d3e0c8-496e-4871-9166-4f0e9c33fc2f",
                  "parentUUID": "edf198e4-d0b1-4b07-ab47-747680b6387f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b5d3e0c8-496e-4871-9166-4f0e9c33fc2f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "016caf26-8eff-45bd-afb3-5a4ccd035963",
              "title": "Add win",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have 1 wins",
                  "fullTitle": "database testing Add win should have 1 wins",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.addWin(user_name)\nexpect(user.wins).to.equal(1)\nexpect(user.losses).to.equal(0)",
                  "err": {},
                  "uuid": "38436bb7-4644-4115-97ee-1391f5c6778e",
                  "parentUUID": "016caf26-8eff-45bd-afb3-5a4ccd035963",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38436bb7-4644-4115-97ee-1391f5c6778e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b5e5b6fe-93c6-4913-8654-d6e1d7a51f7e",
              "title": "Add loss",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have 1 loss",
                  "fullTitle": "database testing Add loss should have 1 loss",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.addLoss(user_name)\nexpect(user.losses).to.equal(1)\nexpect(user.wins).to.equal(1)",
                  "err": {},
                  "uuid": "6a2636dc-bf31-4340-8c9e-29216386d1d4",
                  "parentUUID": "b5e5b6fe-93c6-4913-8654-d6e1d7a51f7e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6a2636dc-bf31-4340-8c9e-29216386d1d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "def68043-2c55-4158-adba-c7f4f047f5b9",
              "title": "Get users",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have at least one user",
                  "fullTitle": "database testing Get users should have at least one user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let scores = await db.getAllScores()\nexpect(Object.keys(scores).length).to.be.at.least(1)",
                  "err": {},
                  "uuid": "731e2ee5-4810-4787-8d85-bb7f21f6c223",
                  "parentUUID": "def68043-2c55-4158-adba-c7f4f047f5b9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "731e2ee5-4810-4787-8d85-bb7f21f6c223"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "62ecc734-b7ee-4c10-88bc-c9773a580e9a",
              "title": "Change name",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should change name in db and have same score",
                  "fullTitle": "database testing Change name should change name in db and have same score",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.getUser(user_name)\nawait db.changeUsername(user_name,new_user_name)\nlet new_user = await db.getUser(new_user_name)\nexpect(user.losses).to.equal(new_user.losses)\nexpect(user.wins).to.equal(new_user.wins)\nexpect(user.name).to.not.equal(new_user.name)",
                  "err": {},
                  "uuid": "19056966-a603-45c3-9925-53721eeff54c",
                  "parentUUID": "62ecc734-b7ee-4c10-88bc-c9773a580e9a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19056966-a603-45c3-9925-53721eeff54c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4b4d590e-2aa9-47bd-b1dc-3381641f946e",
              "title": "Remove test user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be undefined",
                  "fullTitle": "database testing Remove test user should be undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.removeUser(new_user_name)\nexpect(user.name).to.be.undefined\nexpect(user.wins).to.be.undefined\nexpect(user.losses).to.be.undefined",
                  "err": {},
                  "uuid": "05cc3fd0-4325-46f1-8438-9fc436fa032b",
                  "parentUUID": "4b4d590e-2aa9-47bd-b1dc-3381641f946e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05cc3fd0-4325-46f1-8438-9fc436fa032b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0b2a4e88-c24e-4534-84a5-a5a020d6ab02",
              "title": "Normal user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should exist",
                  "fullTitle": "database testing Normal user should exist",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await db.createUser(user_name,0,0)\nawait db.createUser(new_user_name,0,0)\nlet user = await db.getUser(user_name)\nexpect(user.name).to.equal(user_name)",
                  "err": {},
                  "uuid": "2e6a8cff-197b-4c89-8892-cd3b780d1317",
                  "parentUUID": "0b2a4e88-c24e-4534-84a5-a5a020d6ab02",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e6a8cff-197b-4c89-8892-cd3b780d1317"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c7f2aa66-40b4-46c6-bd3b-3e6579fa7c1c",
              "title": "Remove all users",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not have any users left",
                  "fullTitle": "database testing Remove all users should not have any users left",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await db.removeAllUsers()\nlet scores = await db.getAllScores()\nexpect(Object.keys(scores).length).to.equal(0)",
                  "err": {},
                  "uuid": "8230d95a-d01c-43ed-a738-6bf595bf04ec",
                  "parentUUID": "c7f2aa66-40b4-46c6-bd3b-3e6579fa7c1c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8230d95a-d01c-43ed-a738-6bf595bf04ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}