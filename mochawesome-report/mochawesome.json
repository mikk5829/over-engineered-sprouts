{
  "stats": {
    "suites": 10,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-22T08:42:57.909Z",
    "end": "2020-06-22T08:42:57.937Z",
    "duration": 28,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a43b4e7e-8ec6-4d76-80fa-638c4a51ba17",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "228f578c-ef7c-4749-9d2f-deeadade1684",
          "title": "database testing",
          "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
          "file": "/test/dbTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "18aa9ef8-28ac-4211-80a4-7425bd960cb1",
              "title": "Normal user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should exist",
                  "fullTitle": "database testing Normal user should exist",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await db.removeUser(user_name)\nawait db.createUser(user_name,0,0)\nlet user = await db.getUser(user_name)\nexpect(user.name).to.equal(user_name)",
                  "err": {},
                  "uuid": "0c75af19-807a-4f32-ba43-6131d92b8db0",
                  "parentUUID": "18aa9ef8-28ac-4211-80a4-7425bd960cb1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c75af19-807a-4f32-ba43-6131d92b8db0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e2ab2206-438e-4428-9354-02ce05c0a06e",
              "title": "Normal user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not be created twice",
                  "fullTitle": "database testing Normal user should not be created twice",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.createUser(user_name,0,0)\nexpect(user).to.equal(\"user exists\")",
                  "err": {},
                  "uuid": "86c9f88e-92a4-459e-85fc-af63543ceb7c",
                  "parentUUID": "e2ab2206-438e-4428-9354-02ce05c0a06e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "86c9f88e-92a4-459e-85fc-af63543ceb7c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c245642d-0bba-4148-b371-caa5505bb522",
              "title": "Normal user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have 0 wins",
                  "fullTitle": "database testing Normal user should have 0 wins",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.getUser(user_name)\nexpect(user.wins).to.equal(0)",
                  "err": {},
                  "uuid": "342dfbc5-8b8a-4831-a23b-f3b10d3c3872",
                  "parentUUID": "c245642d-0bba-4148-b371-caa5505bb522",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "342dfbc5-8b8a-4831-a23b-f3b10d3c3872"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1895b580-5d32-4b48-8519-35f4f568f123",
              "title": "Normal user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have 0 losses",
                  "fullTitle": "database testing Normal user should have 0 losses",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.getUser(user_name)\nexpect(user.losses).to.equal(0)",
                  "err": {},
                  "uuid": "e1d145de-788e-453f-903c-e2b1610ad76f",
                  "parentUUID": "1895b580-5d32-4b48-8519-35f4f568f123",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1d145de-788e-453f-903c-e2b1610ad76f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "79e979f1-ddfb-410d-ade7-26dffb87a222",
              "title": "Add win",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have 1 wins",
                  "fullTitle": "database testing Add win should have 1 wins",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.addWin(user_name)\nexpect(user.wins).to.equal(1)\nexpect(user.losses).to.equal(0)",
                  "err": {},
                  "uuid": "6b0f73b6-d9de-48e7-b8c9-d5ee63e3199b",
                  "parentUUID": "79e979f1-ddfb-410d-ade7-26dffb87a222",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b0f73b6-d9de-48e7-b8c9-d5ee63e3199b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cc4a8015-7673-4a67-bb8c-81b3a69d56d8",
              "title": "Add loss",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have 1 loss",
                  "fullTitle": "database testing Add loss should have 1 loss",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.addLoss(user_name)\nexpect(user.losses).to.equal(1)\nexpect(user.wins).to.equal(1)",
                  "err": {},
                  "uuid": "e3974137-a5cc-4fa3-916f-cbb68c8a31c3",
                  "parentUUID": "cc4a8015-7673-4a67-bb8c-81b3a69d56d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e3974137-a5cc-4fa3-916f-cbb68c8a31c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0a18972a-bc45-446c-a65e-8e2d31aa5ec8",
              "title": "Get users",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have at least one user",
                  "fullTitle": "database testing Get users should have at least one user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let scores = await db.getAllScores()\nexpect(Object.keys(scores).length).to.be.at.least(1)",
                  "err": {},
                  "uuid": "d01bceb9-c041-43db-9f39-a9e4d8f518b2",
                  "parentUUID": "0a18972a-bc45-446c-a65e-8e2d31aa5ec8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d01bceb9-c041-43db-9f39-a9e4d8f518b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f8cc1929-1b33-416f-a6a3-ddda0c127d7e",
              "title": "Change name",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should change name in db and have same score",
                  "fullTitle": "database testing Change name should change name in db and have same score",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.getUser(user_name)\nawait db.changeUsername(user_name,new_user_name)\nlet new_user = await db.getUser(new_user_name)\nexpect(user.losses).to.equal(new_user.losses)\nexpect(user.wins).to.equal(new_user.wins)\nexpect(user.name).to.not.equal(new_user.name)",
                  "err": {},
                  "uuid": "06d09962-115e-480c-8515-5142793f7fee",
                  "parentUUID": "f8cc1929-1b33-416f-a6a3-ddda0c127d7e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "06d09962-115e-480c-8515-5142793f7fee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "794c7b7d-c170-4345-96ee-36b37d3b39dc",
              "title": "Remove test user",
              "fullFile": "/Users/mikkelrosenfeldtanderson/Udvikler/over-engineered-sprout/test/dbTest.js",
              "file": "/test/dbTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be undefined",
                  "fullTitle": "database testing Remove test user should be undefined",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let user = await db.removeUser(new_user_name)\nexpect(user.name).to.be.undefined\nexpect(user.wins).to.be.undefined\nexpect(user.losses).to.be.undefined",
                  "err": {},
                  "uuid": "7a0d00af-e0cd-488b-9381-6b537f5955fb",
                  "parentUUID": "794c7b7d-c170-4345-96ee-36b37d3b39dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a0d00af-e0cd-488b-9381-6b537f5955fb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}